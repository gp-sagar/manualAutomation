# Generated by Django 4.0 on 2022-08-25 06:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DcuInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dcuid', models.CharField(db_column='dcuID', max_length=100, unique=True)),
                ('feeder_id', models.CharField(max_length=100)),
                ('grid_id', models.CharField(max_length=45, unique=True)),
                ('dcunetwork', models.CharField(db_column='dcuNetwork', max_length=45)),
                ('dcuchannel', models.CharField(db_column='dcuChannel', max_length=45)),
                ('dcutype', models.CharField(db_column='dcuType', max_length=45)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('time', models.DateTimeField()),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('imagescount', models.IntegerField(db_column='imagesCount')),
                ('site_id', models.CharField(blank=True, max_length=500, null=True)),
                ('hw_version', models.CharField(blank=True, max_length=45, null=True)),
                ('tariff1', models.CharField(blank=True, max_length=100, null=True)),
                ('dg_full_tariff', models.CharField(blank=True, max_length=500, null=True)),
                ('tariff2', models.CharField(blank=True, max_length=100, null=True)),
                ('eb_full_tariff', models.CharField(blank=True, max_length=500, null=True)),
                ('dg_meter', models.CharField(blank=True, max_length=20, null=True)),
                ('dg_common_area_charge', models.FloatField(blank=True, null=True)),
                ('dg_maintenance_charge', models.FloatField(blank=True, null=True)),
                ('eb_meter', models.CharField(blank=True, max_length=20, null=True)),
                ('eb_common_area_charge', models.FloatField(blank=True, null=True)),
                ('eb_maintenance_charge', models.FloatField(blank=True, null=True)),
                ('is_dual_source', models.IntegerField(blank=True, null=True)),
                ('cmd_set_id', models.CharField(blank=True, max_length=45, null=True)),
                ('rf_power', models.IntegerField(blank=True, null=True)),
                ('cluster_node_limit', models.IntegerField(blank=True, null=True)),
                ('is_meter_level_tariff', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dcu_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MicrogridSurveydtr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=50)),
                ('substation_name', models.CharField(max_length=50)),
                ('feeder_name', models.CharField(max_length=50)),
                ('feeder_code', models.CharField(max_length=50)),
                ('location_number', models.CharField(max_length=50)),
                ('ss_code', models.CharField(max_length=50)),
                ('dtr_name', models.CharField(max_length=50)),
                ('dtr_code', models.CharField(max_length=50)),
                ('dtr_capacity', models.CharField(max_length=10)),
                ('dtr_make', models.CharField(max_length=50)),
                ('phase', models.CharField(max_length=5)),
                ('earthing', models.CharField(max_length=5)),
                ('oil_leakage', models.CharField(max_length=5)),
                ('dt_mount_structure', models.CharField(max_length=50)),
                ('mount_structure_condition', models.CharField(max_length=10)),
                ('conn_type', models.CharField(max_length=20)),
                ('dt_ht_available', models.CharField(max_length=5)),
                ('dt_condition', models.CharField(max_length=20)),
                ('dt_sr_no', models.CharField(max_length=20)),
                ('dt_meter_make', models.CharField(blank=True, max_length=50, null=True)),
                ('power_factor', models.CharField(max_length=20)),
                ('remarks', models.CharField(max_length=200)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('site_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('transformer_id', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('dtr_model', models.CharField(max_length=30)),
                ('dtr_mount', models.CharField(max_length=30)),
                ('dt_meter_available', models.CharField(max_length=50)),
                ('dt_meter_connected', models.CharField(max_length=50)),
                ('dt_meter_serial_number', models.CharField(max_length=50)),
                ('dt_meter_type', models.CharField(max_length=50)),
                ('dt_meter_status', models.CharField(max_length=50)),
                ('notes', models.CharField(blank=True, max_length=500, null=True)),
                ('feeder_id', models.CharField(blank=True, max_length=200, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('qc_time', models.CharField(blank=True, max_length=45, null=True)),
                ('qc_status', models.CharField(blank=True, max_length=45, null=True)),
                ('user', models.CharField(blank=True, max_length=45, null=True)),
                ('imagescount', models.IntegerField(blank=True, db_column='imagesCount', null=True)),
                ('site_name', models.CharField(blank=True, max_length=100, null=True)),
                ('resurvey_status', models.CharField(blank=True, max_length=10, null=True)),
                ('ct_factor', models.FloatField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('energy_ct_factor', models.FloatField(blank=True, null=True)),
                ('active_power_ct_factor', models.FloatField(blank=True, null=True)),
                ('current_ct_factor', models.FloatField(blank=True, null=True)),
                ('json_ct_factors', models.TextField(blank=True, null=True)),
                ('city_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_postpaid_site', models.IntegerField(blank=True, null=True)),
                ('is_service_charge_enabled', models.IntegerField(blank=True, null=True)),
                ('is_real_estate', models.IntegerField(blank=True, null=True)),
                ('is_kvah_billing', models.IntegerField(blank=True, null=True)),
                ('real_estate_project', models.CharField(blank=True, max_length=45, null=True)),
                ('is_online_payment_allowed', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'microgrid_surveydtr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MicrogridSurveyfeeder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feeder_id', models.CharField(max_length=100, unique=True)),
                ('feeder_name', models.CharField(max_length=100)),
                ('rated_capacity', models.CharField(max_length=30)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('feeder_code', models.CharField(blank=True, max_length=30, null=True)),
                ('time_old', models.CharField(blank=True, max_length=100, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'microgrid_surveyfeeder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MicrogridSurveyhouseholdinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=100)),
                ('name_bill', models.CharField(max_length=50)),
                ('name_tenant', models.CharField(max_length=50)),
                ('sc_no', models.CharField(max_length=100, unique=True)),
                ('contact_bill', models.CharField(max_length=20)),
                ('contact_tenant', models.CharField(max_length=20)),
                ('email_bill', models.CharField(max_length=50)),
                ('email_tenant', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=200)),
                ('supply_hrs', models.CharField(max_length=10)),
                ('meter_serial', models.CharField(max_length=50)),
                ('meter_make', models.CharField(max_length=50)),
                ('capacity', models.CharField(max_length=50)),
                ('meter_type', models.CharField(max_length=20)),
                ('working_status', models.CharField(max_length=50)),
                ('meter_reading_kwh', models.CharField(max_length=20)),
                ('meter_reading_kvah', models.CharField(max_length=20)),
                ('meter_reading_md', models.CharField(max_length=20)),
                ('supply_type', models.CharField(max_length=20)),
                ('tariff', models.CharField(max_length=10)),
                ('ci_status', models.CharField(max_length=20)),
                ('connection_status', models.CharField(max_length=20)),
                ('surveyor_name', models.CharField(max_length=50)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('startlat', models.FloatField(db_column='startLat')),
                ('startlng', models.FloatField(db_column='startLng')),
                ('connection_category', models.CharField(max_length=20)),
                ('establishment', models.CharField(max_length=50)),
                ('pole_no', models.CharField(max_length=20)),
                ('dt_code', models.CharField(max_length=20)),
                ('id_proof_type_bill', models.CharField(max_length=20)),
                ('id_proof_no_bill', models.CharField(max_length=20)),
                ('id_proof_type_tenant', models.CharField(max_length=20)),
                ('id_proof_no_tenant', models.CharField(max_length=20)),
                ('consumer_category', models.CharField(max_length=50)),
                ('department_name', models.CharField(max_length=50)),
                ('enclosure', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('approachability', models.CharField(max_length=50)),
                ('height_meter', models.CharField(max_length=50)),
                ('connection_type', models.CharField(max_length=50)),
                ('cable_type', models.CharField(max_length=50)),
                ('payment_mode', models.CharField(max_length=50)),
                ('problems', models.CharField(max_length=500)),
                ('grid_id', models.CharField(max_length=50)),
                ('meter_address', models.CharField(max_length=50)),
                ('site_id', models.CharField(blank=True, max_length=100, null=True)),
                ('pole_id', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.CharField(blank=True, max_length=100, null=True)),
                ('house_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('father_name_bill', models.CharField(max_length=50)),
                ('sc_no_new_final', models.CharField(blank=True, max_length=100, null=True)),
                ('meter_bc_number', models.CharField(max_length=30)),
                ('meter_location', models.CharField(max_length=50)),
                ('contracted_demand', models.CharField(max_length=30)),
                ('kwh_reading', models.CharField(max_length=30)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('qc_status', models.CharField(blank=True, max_length=100, null=True)),
                ('qc_time', models.CharField(blank=True, max_length=45, null=True)),
                ('user', models.CharField(blank=True, max_length=100, null=True)),
                ('imagecount', models.IntegerField(blank=True, db_column='imageCount', null=True)),
                ('qc_notes', models.CharField(blank=True, max_length=500, null=True)),
                ('supervisorname', models.CharField(blank=True, db_column='supervisorName', max_length=30, null=True)),
                ('supervisorqcstatus', models.CharField(blank=True, db_column='supervisorQCStatus', max_length=30, null=True)),
                ('supervisornotes', models.CharField(blank=True, db_column='supervisorNotes', max_length=200, null=True)),
                ('assert_seq', models.CharField(blank=True, max_length=200, null=True)),
                ('resurvey_time', models.DateTimeField(blank=True, null=True)),
                ('tariff_category', models.CharField(blank=True, max_length=45, null=True)),
                ('tariff_subcategory', models.CharField(blank=True, max_length=45, null=True)),
                ('replace_time', models.DateTimeField(blank=True, null=True)),
                ('phase', models.CharField(blank=True, max_length=1, null=True)),
                ('meter_category', models.CharField(blank=True, max_length=10, null=True)),
                ('meter_replace_date', models.DateTimeField(blank=True, null=True)),
                ('old_meter_serial', models.CharField(blank=True, max_length=50, null=True)),
                ('meter_pp_box', models.CharField(blank=True, max_length=45, null=True)),
                ('used_service_cable', models.CharField(blank=True, max_length=45, null=True)),
                ('mcr_no', models.CharField(blank=True, max_length=45, null=True)),
                ('meter_mode', models.CharField(blank=True, max_length=20, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('contracted_demand_unit', models.CharField(blank=True, max_length=5, null=True)),
                ('meter_sw_version', models.CharField(blank=True, max_length=10, null=True)),
                ('metersoftwareversion', models.CharField(blank=True, db_column='meterSoftwareVersion', max_length=60, null=True)),
                ('meter_mapping', models.CharField(blank=True, max_length=50, null=True)),
                ('ct_ratio', models.IntegerField(blank=True, null=True)),
                ('meteringstatus', models.CharField(blank=True, db_column='meteringStatus', max_length=30, null=True)),
                ('net_metering', models.IntegerField(blank=True, null=True)),
                ('survey_stage_name', models.CharField(blank=True, max_length=100, null=True)),
                ('meter_protocol_type', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'microgrid_surveyhouseholdinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MicrogridSurveypss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pss_id', models.CharField(max_length=200, unique=True)),
                ('pss_name', models.CharField(max_length=100)),
                ('rated_capacity', models.CharField(max_length=30)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('time_old', models.CharField(blank=True, max_length=100, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('vertical_mapping', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'microgrid_surveypss',
                'managed': False,
            },
        ),
    ]
